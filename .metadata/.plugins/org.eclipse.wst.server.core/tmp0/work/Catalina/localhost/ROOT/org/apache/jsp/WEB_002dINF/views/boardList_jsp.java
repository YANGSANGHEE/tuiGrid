/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2024-03-07 09:57:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/user/Desktop/tuiGrid/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/crudTest/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1689063773927L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/reset.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/mdi-style.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/tui-grid.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/tui-pagination.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/sub-style.css\">\r\n");
      out.write("<title>게시판 만들기</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<section class=\"sub-page\">\r\n");
      out.write("\t\t<div class=\"s__container\">\r\n");
      out.write("\t\t\t<div class=\"s__row\">\r\n");
      out.write("\t\t\t\t<div class=\"rayout02\">\r\n");
      out.write("\t\t\t\t\t<div class=\"board01\">\r\n");
      out.write("\t\t\t\t\t\t<form>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"border-search01\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" id=\"searchKeyword\" name=\"searchKeyword\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn-main\" id=\"searchBtn\" style=\"margin-right: 10px\" type=\"button\">검색</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn-main\" id=\"initBtn\" style=\"margin-right: 10px\" type=\"button\">초기화</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn-main\" id=\"deleteBtn\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"margin-right: 10px\" type=\"button\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn-main\" id=\"writeBtn\" type=\"button\">글작성</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t<!--해당 div에 리스트를 출력해보기-->\r\n");
      out.write("\t\t\t\t\t\t<div id=\"grid\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<script src=\"/js/jquery-1.9.1.js\"></script>\r\n");
      out.write("\t<script src=\"/js/tui-pagination.js\"></script>\r\n");
      out.write("\t<script src=\"/js/tui-grid.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("    // 도움말\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("    \t//ajax 순서대로 부르기 위해\r\n");
      out.write("    \t//그리드가 로딩이 된 후 삭제 이벤트 설정\r\n");
      out.write("    \tnew Promise((resolve,reject)=>{\r\n");
      out.write("    \t\t//그리드 세팅용 ajajx\r\n");
      out.write("        \t$.ajax({\r\n");
      out.write("        \t\turl:\"/board/selectBoardList\",\r\n");
      out.write("        \t\ttype:\"get\",\r\n");
      out.write("                beforeSend: function (xhr) {\r\n");
      out.write("                    xhr.setRequestHeader(\"Content-type\",\"application/json\");\r\n");
      out.write("                },\r\n");
      out.write("        \t\tsuccess:function(data){\r\n");
      out.write("        \t\t\tif(data){\r\n");
      out.write("        \t\t\t    let grid = new tui.Grid({\r\n");
      out.write("        \t\t\t        el: document.getElementById(\"grid\"),\r\n");
      out.write("        \t\t\t        data: data,\r\n");
      out.write("        \t\t\t        scrollX: true,\r\n");
      out.write("        \t\t\t        scrollY: false,\r\n");
      out.write("        \t\t\t        minBodyHeight: 30,\r\n");
      out.write("        \t                rowHeaders: [{\r\n");
      out.write("        \t                    type : 'rowNum' ,\r\n");
      out.write("        \t                    header : \"번호\",\r\n");
      out.write("        \t                    width : 80,\r\n");
      out.write("\r\n");
      out.write("        \t                }],\r\n");
      out.write("        \t\t\t        pageOptions: {\r\n");
      out.write("        \t\t\t          useClient: true,\r\n");
      out.write("        \t\t\t          perPage: 10,\r\n");
      out.write("        \t\t\t        },\r\n");
      out.write("        \t\t\t        header: {\r\n");
      out.write("        \t\t\t          height: 57\r\n");
      out.write("        \t\t\t        },\r\n");
      out.write("        \t\t\t        minRowHeight: 71,\r\n");
      out.write("        \t\t\t        columns: [\r\n");
      out.write("       \t\t\t        \t{\r\n");
      out.write("       \t\t\t        \t\twidth : 80,\r\n");
      out.write("       \t\t\t        \t\tformatter:function(data){\r\n");
      out.write("       \t\t\t        \t\t\tlet html = '<input type=\"checkbox\" name=seq value='+data.row.seq+'>'\r\n");
      out.write("       \t\t\t        \t\t\treturn html;\r\n");
      out.write("       \t\t\t        \t\t}\r\n");
      out.write("       \t\t\t        \t},\r\n");
      out.write("        \t\t\t          {\r\n");
      out.write("        \t\t\t            header: '제목',\r\n");
      out.write("        \t\t\t            name: 'title',\r\n");
      out.write("        \t\t\t            align: 'center',\r\n");
      out.write("        \t\t\t            formatter: function(data){\r\n");
      out.write("        \t\t\t            \tlet html = '<span style=\"color:red; cursor:pointer;\" class=\"viewDetail\" data-boardseq='+data.row.seq+'>'+data.row.title+'</span>'\r\n");
      out.write("        \t\t\t            \treturn html;\r\n");
      out.write("        \t\t\t            }\r\n");
      out.write("        \t\t\t          },\r\n");
      out.write("        \t\t\t          {\r\n");
      out.write("        \t\t\t            header: '작성자',\r\n");
      out.write("        \t\t\t            name: 'userId',\r\n");
      out.write("        \t\t\t            align: 'center',\r\n");
      out.write("        \t\t\t            width: 200,\r\n");
      out.write("        \t\t\t          },\r\n");
      out.write("        \t\t\t          {\r\n");
      out.write("        \t\t\t            header: '등록일',\r\n");
      out.write("        \t\t\t            name: 'regDt',\r\n");
      out.write("        \t\t\t            align: 'center',\r\n");
      out.write("        \t\t\t            width: 200,\r\n");
      out.write("        \t\t\t          },\r\n");
      out.write("        \t\t\t        ],\r\n");
      out.write("        \t\t\t      });\r\n");
      out.write("        \t\t\t    \r\n");
      out.write("        \t\t\t    let seq = [...document.querySelectorAll(\"input[name=seq]\")]; //checkbox\r\n");
      out.write("        \t\t\t   \tlet spanEle = [...document.querySelectorAll(\".viewDetail\")];\r\n");
      out.write("        \t\t\t   \tlet delBtn = document.getElementById(\"deleteBtn\"); //삭제버튼\r\n");
      out.write("        \t\t\t   \tlet writeBtn = document.getElementById(\"writeBtn\"); // 글작성버튼\r\n");
      out.write("        \t\t\t   \t\r\n");
      out.write("        \t\t\t   \twriteBtn.addEventListener(\"click\",function(){\r\n");
      out.write("        \t\t\t   \t\tlocation.href = \"/board/viewboardwrite\";\r\n");
      out.write("        \t\t\t   \t})\r\n");
      out.write("        \t\t\t   \t\r\n");
      out.write("        \t\t\t   \tlet resolves = [seq,delBtn,grid]; //resolve에 넘길 배열\r\n");
      out.write("        \t\t\t   \t \r\n");
      out.write("        \t\t\t   \t//제목 클릭시 상세로 가기 \r\n");
      out.write("    \t\t\t\t\tspanEle.forEach((val,idx)=>{\r\n");
      out.write("    \t\t\t\t\t\tval.addEventListener(\"click\",function(e){\r\n");
      out.write("    \t\t\t\t\t\t\tlet seq = e.target.dataset[\"boardseq\"];\r\n");
      out.write("    \t\t\t\t\t\t\tviewDetailPage(seq);\r\n");
      out.write("    \t\t\t\t\t\t});\r\n");
      out.write("    \t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("        \t\t\t   \t//페이지 이동 함수\r\n");
      out.write("    \t\t\t\t\tfunction viewDetailPage(seq){\r\n");
      out.write("    \t\t\t\t\t\tlocation.href = '/board/viewboardDetail?seq='+seq;\r\n");
      out.write("    \t\t\t\t\t}\r\n");
      out.write("    \t\t\t\t\t\r\n");
      out.write("        \t\t\t   \t//체크박스, 삭제버튼 then으로 넘기기\r\n");
      out.write("    \t\t\t\t\tresolve(resolves);\r\n");
      out.write("    \t\t\t\t\t\r\n");
      out.write("        \t\t\t}else{\r\n");
      out.write("        \t\t\t\tconsole.log(\"관리자에게 문의 바랍니다.\");\r\n");
      out.write("        \t\t\t}\r\n");
      out.write("        \t\t},\r\n");
      out.write("        \t\terror: function (){\r\n");
      out.write("        \t\t\tconsole.log(\"관리자에게 문의 바랍니다.\");\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("        \t});\r\n");
      out.write("    \t\t//그리드 세팅 후\r\n");
      out.write("    \t}).then((val)=>{\r\n");
      out.write("    \t\tlet seqInput = val[0]; //checkbox\r\n");
      out.write("    \t\tlet delBtn = val[1]; //삭제버튼\r\n");
      out.write("    \t\tlet grid = val[2] //grid\r\n");
      out.write("    \t\tlet delArr = []; //seq를 담을 배열\r\n");
      out.write("    \t\tlet searchBtn = document.getElementById(\"searchBtn\");\r\n");
      out.write("    \t\tlet initBtn = document.getElementById(\"initBtn\");\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\tgrid.on(\"click\", function(data) {\r\n");
      out.write("    \t\t    // 업데이트된 데이터를 콘솔에 출력\r\n");
      out.write("    \t\t    console.log(\"그리드 데이터가 업데이트되었습니다:\");\r\n");
      out.write("    \t\t    console.log(data);\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t//검색\r\n");
      out.write("    \t\tsearchBtn.addEventListener(\"click\",function(){\r\n");
      out.write("    \t\t\tlet searchKeyword = document.getElementById(\"searchKeyword\");\r\n");
      out.write("    \t\t\tlet searchVal = searchKeyword.value;\r\n");
      out.write("    \t\t\t\r\n");
      out.write("    \t\t\t$.ajax({\r\n");
      out.write("            \t\turl:\"/board/selectBoardList\",\r\n");
      out.write("            \t\ttype:\"get\",\r\n");
      out.write("            \t\tdata:{keyword:searchVal},\r\n");
      out.write("                    beforeSend: function (xhr) {\r\n");
      out.write("                        xhr.setRequestHeader(\"Content-type\",\"application/json\");\r\n");
      out.write("                    },\r\n");
      out.write("            \t\tsuccess:function(data){\r\n");
      out.write("            \t\t\tgrid.resetData(data);\r\n");
      out.write("            \t\t}\r\n");
      out.write("    \t\t\t});\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t//초기화\r\n");
      out.write("    \t\tinitBtn.addEventListener(\"click\",function(){\r\n");
      out.write("    \t\t\t$.ajax({\r\n");
      out.write("            \t\turl:\"/board/selectBoardList\",\r\n");
      out.write("            \t\ttype:\"get\",\r\n");
      out.write("                    beforeSend: function (xhr) {\r\n");
      out.write("                        xhr.setRequestHeader(\"Content-type\",\"application/json\");\r\n");
      out.write("                    },\r\n");
      out.write("            \t\tsuccess:function(data){\r\n");
      out.write("            \t\t\tgrid.resetData(data);\r\n");
      out.write("            \t\t}\r\n");
      out.write("    \t\t\t});\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t\t\r\n");
      out.write("    \t\t//삭제이벤트\r\n");
      out.write("\t\t\tdelBtn.addEventListener(\"click\",function(){\r\n");
      out.write("\t        \tif(confirm(\"삭제하시겠습니까?\")){\r\n");
      out.write("\t        \t\tseqInput.forEach((val,idx)=>{\r\n");
      out.write("\t        \t\t\tif(val.checked){\r\n");
      out.write("\t        \t\t\t\tlet seq = val.value;\r\n");
      out.write("\t        \t\t\t\tdelArr.push(seq);\r\n");
      out.write("\t        \t\t\t}\r\n");
      out.write("\t        \t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\tif(delArr.length == 0){\r\n");
      out.write("\t\t\t\t\t\talert(\"삭제할 게시글을 체크해주세요.\");\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t        \t\t\r\n");
      out.write("\t\t        \t$.ajax({\r\n");
      out.write("\t\t        \t\turl:\"/board/deleteboard\",\r\n");
      out.write("\t\t        \t\ttype:\"post\",\r\n");
      out.write("\t\t        \t\tdata:{\r\n");
      out.write("\t\t        \t\t\tdelseq:delArr\r\n");
      out.write("\t\t        \t\t},\r\n");
      out.write("\t\t        \t\tsuccess : function(data){\r\n");
      out.write("\t\t        \t\t\tif(data > 0){\r\n");
      out.write("\t\t        \t\t\t\tif(!alert(\"삭제를 완료하였습니다.\")){\r\n");
      out.write("\t\t        \t\t\t\t\tlocation.href=\"/board/viewBoardList\";\r\n");
      out.write("\t\t        \t\t\t\t}\r\n");
      out.write("\t\t        \t\t\t}else{\r\n");
      out.write("\t\t        \t\t\t\talert(\"삭제 중 문제가 발생하였습니다.\");\r\n");
      out.write("\t\t        \t\t\t}\r\n");
      out.write("\t\t        \t\t}\r\n");
      out.write("\t\t        \t});\r\n");
      out.write("/* \r\n");
      out.write("\t\t\t\t\t var v_ajax = new XMLHttpRequest();\r\n");
      out.write("\t\t\t           //v_ajax.open(\"메소드\",\"주소\" ,비동기여부);\r\n");
      out.write("\t\t           \t v_ajax.open(\"post\",\"/board/deleteboard\" ,true);\r\n");
      out.write("\t\t\t         v_ajax.setRequestHeader(\"Content-Type\", \"application/json\");\r\n");
      out.write("\t\t\t         \r\n");
      out.write("\t\t\t           //이벤트\r\n");
      out.write("\t\t\t         v_ajax.onreadystatechange = function(){\r\n");
      out.write("\t\t\t              // 4 이거나 200 일때만 성공\r\n");
      out.write("\t\t\t              if(v_ajax.readyState == 4 && v_ajax.status == 200){\r\n");
      out.write("\t\t\t                console.log(v_ajax.responseText);\r\n");
      out.write("\t\t\t                // 값 나오면 여기서 작업\r\n");
      out.write("\t\t\t              }\r\n");
      out.write("\t\t\t         }\r\n");
      out.write("\r\n");
      out.write("\t\t             v_ajax.send(JSON.stringify({ delseq: delArr })); */\r\n");
      out.write("\t\t             \r\n");
      out.write("\t\t             grid.on(\"update\",()=>{\r\n");
      out.write("\t\t            \t console.log('dd');\r\n");
      out.write("\t\t             });\r\n");
      out.write("\t        \t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("    \t});\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
